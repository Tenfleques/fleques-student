{"version":3,"sources":["Pages/Support/index.js","_locale/index.js","Pages/Home/index.js","Pages/Auth/Login/index.js","Controls/AutocompleteTextBox.js","utilities/text.js","utilities/index.js","Components/Table/index.js","Pages/Wizards/Transcript/index.js","Components/navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","user_lang","localStorage","getItem","navigator","language","userLanguage","Locale","title","LoginPage","props","state","login","password","submitted","user","error","handleChange","bind","handleSubmit","sessionStorage","removeItem","e","target","name","value","this","setState","preventDefault","onSubmit","htmlFor","type","onChange","icon","faStop","faSpinner","token","to","pathname","from","renderLoginForm","React","Component","AutoCompleteTextBox","options","filtered_options","autoComplete","onClick","handleClickOutside","old_props","old_state","length","document","addEventListener","removeEventListener","nodeName","val","filterFunc","caption","onInput","id","placeholder","help","optionsDropdownClass","formatOptions","onClickElement","TextUtilities","similarity","s1","s2","longer","shorter","longerLength","toLowerCase","costs","i","lastValue","j","newValue","charAt","Math","min","editDistance","parseFloat","hashCode","str","hash","charCodeAt","abs","Table","columns","data","page","rows","onClickPagination","headerClass","map","c","key","field","class","init","end","push","flequesGetPagination","pages","floor","btns","oldProps","fleques_large_table_columns","fleques_large_table_rows","TranscriptPage","selected_options","table","TranscripTableProps","table_header","student","faculty","speciality","form_of_training","onChangeSelect","onClickOption","chosen_option","dataset","filter","a","includes","data-key","label","index","en","text","sims","sim","TextUtils","slice","department","max","apply","order","sort","b","fetch","then","r","lines","split","group","arr","processSubjectFile","optionsFilterFunction","formatTableRows","NavBar","location","useLocation","navs","link","App","basename","PrivateNavs","PublicNavs","exact","strict","path","component","Login","SupportPage","Boolean","window","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.392ffed0.chunk.js","sourcesContent":["import React from 'react';\n// import Locale from \"../../_locale\"\n\n\nexport default function Home() {\n    return (\n        <div className=\"\">            \n            <div className=\"container-fluid mt-5\">\n                <div className=\"col-12 h3\">\n                    \n                </div>\n                <div className=\"col-12\">\n                    \n                </div>\n            </div>\n        </div>      \n    );\n  }\n  ","import en from \"./en\";\nimport ru from \"./ru\";\n\nexport default {\n    \"en\" : en,\n    \"ru\" : ru\n}","import React from 'react';\nimport Locale from \"../../_locale/\"\n\n\nexport default function Home() {\n    const user_lang = localStorage.getItem(\"_locale\") || navigator.language || navigator.userLanguage || \"ru\";\n\n    return (\n        <div className=\"\">            \n            <div className=\"container-fluid mt-5\">\n                <div className=\"col-12 h3\">\n                    {Locale[user_lang][\"_home_lead\"].title}\n                </div>\n                <div className=\"col-12\">\n                    {Locale[user_lang][\"_description\"].title}\n                </div>\n            </div>\n        </div>      \n    );\n  }\n  ","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner, faStop} from '@fortawesome/free-solid-svg-icons'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login: '',\n            password: '',\n            submitted: false,\n            user : {},\n            error: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount(){\n        sessionStorage.removeItem('user');\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value, submitted: false });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        // const { login, password } = this.state;\n        // this.setState({submitted: true})\n        // let user = {\n        //     \"name\" : login,\n        //     \"token\" : password\n        // }\n    }\n\n    renderLoginForm() {\n        const { login, password, submitted, error } = this.state;\n        return (\n            <div className=\"container p-5\">\n                <form className=\"row mt-5 p-md-5 bg-primary text-white max-w-600px mx-auto\" onSubmit={this.handleSubmit}>\n                    <div className={error ? \"col-12 text-danger\": \"invisible col-12\"}>\n                        Пользователь не аутентифицирован\n                    </div>\n                    <div className='form-group col-12'>\n                        <label htmlFor=\"login\">логин</label>\n                        <input\n                            type=\"text\"\n                            name=\"login\"\n                            value={login}\n                            className={\"form-control col-12 mb-3\" + (submitted && !login ? ' border-danger' : '')}\n                            onChange={this.handleChange}\n                        />\n                        {submitted && !login &&\n                            <div className=\"text-danger\">обязателная поля</div>\n                        }\n                    </div>\n                    <div className='form-group col-12'>\n                        <label htmlFor=\"password\">пароль</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            className={\"form-control col-12 mb-3\" + (submitted && !password ? ' border-danger' : '')}\n                            onChange={this.handleChange}\n                        />\n                        {submitted && !password &&\n                            <div className=\"text-danger\">обязателная поля</div>\n                        }\n                    </div>\n                    <div className=\"form-group col-12\">\n                        <button \n                            type=\"submit\"\n                            className=\"form-control col-12 mb-3\"\n                        >\n                            Войти &nbsp;\n                            {\n                                submitted ?\n                                <FontAwesomeIcon icon={faStop} className={error?\n                                \"text-danger d-none\" : \"d-none\"} /> : \"\"\n                            }\n                            {\n                                submitted ?\n                                <FontAwesomeIcon icon={faSpinner} className={error?\n                                    \"d-none\" : \"text-success\"} /> : \"\"\n                            }\n                                \n                        </button>\n                        \n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n    render() {\n        return this.state.user.token\n            ? <Redirect to={{ pathname: '/', state: { from: \"/login\" } }} />\n            : this.renderLoginForm();\n    }\n}\n\nexport default LoginPage","import React, { Component } from 'react';\n\nclass AutoCompleteTextBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            options : props.options,\n            filtered_options : []\n        }\n        this.autoComplete = this.autoComplete.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    componentDidUpdate(old_props, old_state){   \n        if(old_props.options.length !== this.props.options.length){\n            if(this.props.filtered_options.length){\n                this.setState({options : this.props.options, filtered_options : this.props.options})\n            }else{\n                this.setState({options : this.props.options})\n            }\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n    handleClickOutside(e){\n        if(e.target.nodeName !== \"BUTTON\" && e.target.nodeName !== \"INPUT\") {\n            this.setState({\n                filtered_options : []\n            })\n        }\n        // this.setState({\n        //     filtered_options : []\n        // })\n    }\n    onClick(e){\n        if(e.target.nodeName !== \"BUTTON\" && e.target.nodeName !== \"INPUT\") {\n            this.setState({\n                filtered_options : []\n            })\n        }\n    }\n    autoComplete(e){\n        let val = e.target.value;\n        // filter options according to supplied filter function\n        let filtered_options = this.props.filterFunc? this.props.filterFunc(val, this.state.options) : this.state.filtered_options;\n\n        this.setState({filtered_options})\n    }\n    render () {\n        return (\n            <div className=\"row\" onClick={this.onClick}>\n                <div className={this.props.className + \"  z-1000 bg-white\"}>\n                    <label htmlFor={this.props.name}>{this.props.caption}</label>\n                    <input \n                        type = \"text\"\n                        className=\"form-control\" \n                        onInput={this.autoComplete}\n                        onChange={this.props.onChange}\n                        id={this.props.name}\n                        name={this.props.name}\n                        value={this.props.value}\n                        placeholder={this.props.placeholder}               \n                        />\n                    <span className=\"muted small\">\n                        {this.props.help}\n                    </span>\n                </div>\n                <div className={this.props.optionsDropdownClass + \" absolute-float\"} >\n                    {this.props.formatOptions ? this.props.formatOptions(this.state.filtered_options, this.props.onClickElement) : \"\"}\n                </div>\n            </div>\n\n        );\n    }        \n}\nexport default AutoCompleteTextBox\n  \n  ","const hashCode = function(str) {\n    var hash = 0, i, chr;\n    if (str.length === 0) return hash;\n    for (i = 0; i < this.length; i++) {\n      chr   = str.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n};\n\nfunction editDistance(s1, s2) {\n    s1 = s1.toLowerCase();\n    s2 = s2.toLowerCase();\n\n    var costs = [];\n    for (var i = 0; i <= s1.length; i++) {\n        var lastValue = i;\n        for (var j = 0; j <= s2.length; j++) {\n            if (i === 0)\n                costs[j] = j;\n            else {\n                if (j > 0) {\n                    var newValue = costs[j - 1];\n                    if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n                        newValue = Math.min(Math.min(newValue, lastValue),\n                            costs[j]) + 1;\n                    costs[j - 1] = lastValue;\n                    lastValue = newValue;\n                }\n            }\n        }\n        if (i > 0)\n            costs[s2.length] = lastValue;\n    }\n    return costs[s2.length];\n}\n\nfunction similarity(s1, s2) {\n    var longer = s1;\n    var shorter = s2;\n    if (s1.length < s2.length) {\n        longer = s2;\n        shorter = s1;\n    }\n    var longerLength = longer.length;\n    if (longerLength === 0) {\n        return 1.0;\n    }\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nconst TextUtilities = {\n    similarity,\n    hashCode\n}\nexport default TextUtilities;","import TextUtilities from \"./text\"\n\nexport default {\n    TextUtilities\n}","import React, {Component} from \"react\";\n\n\nclass Table extends Component {\n    constructor (props){\n        super(props);\n        this.state = {\n            columns : props.columns,\n            data : props.data,\n            title: props.title,\n            page : 0, \n            rows : props.rows\n        }\n        this.onClickPagination = this.onClickPagination.bind(this);\n    }\n    fleques_large_table_columns(){\n        var columns = <div className={this.props.headerClass  + ' pb-4 z-200 sticky-columns text-center'}>\n                        <div className='row px-3'>\n                            <div className=\"col-12 h6 text-left\">\n                               {this.props.title || \"\"} \n                            </div>\n                            {\n                                this.state.columns.map((c) => {\n                                    return <div key={\"col_\" + c.field} className={c.class || 'col '}>\n                                        {c.title}\n                                    </div>\n                                })\n                            }\n                        </div>\n                    </div>\n        return columns;\n    }\n    fleques_large_table_rows(){\n        var rows = [];\n        let cls = \"\";\n        let init = this.state.page * this.state.rows;\n        let end = Math.min(init + this.state.rows, this.state.data.length);\n\n\n        for(var i = init; i < end;  ++i){       \n            rows.push(\n                <div key={\"row_\" +  i} className={cls + ' row border-bottom py-2 px-3'}>\n                {this.state.columns.map((j) => {\n                    return  <div key={\"cell_\" + j.field} className={j.class || 'col'}>    \n                            {this.state.data[i][j.field]}\n                        </div>\n                    })\n                }                 \n            </div>\n            );\n        }\n        rows.push(<div key={\"row_pagination\"} className={cls + ' row py-2 px-3 '}> {this.flequesGetPagination()}</div>)\n        return rows;\n    }\n    onClickPagination(page){\n        this.setState({page : page});\n    }\n    flequesGetPagination(){\n        let pages = Math.floor(this.state.data.length/ this.state.rows) + (this.state.data.length % this.state.rows ? 1 : 0);\n\n        let btns = [];\n        for(let i = 0; i < pages; ++i){\n            btns.push(\n                <span key={\"page_\" + i} className={\"btn btn-transparent mx-0 text-muted text-small\" + (this.state.page === i ? \" bg-primary text-white\" : \"\")} onClick={() => this.onClickPagination(i)}>\n                    {i + 1}\n                </span>\n            )\n        }\n        return btns;\n    }\n    componentDidUpdate(oldProps){\n        if(this.props !== oldProps){\n            this.setState({\n                columns : this.props.columns,\n                data : this.props.data,\n                title: this.props.title,\n            })\n        }\n    }\n    \n    render(){\n        var columns = this.fleques_large_table_columns( \"bg-primary\");\n        var rows = this.fleques_large_table_rows();\n    \n        return <div className={this.props.className}>\n                    {columns}\n                    {rows}\n                </div>\n    }\n}\n\nexport default Table","import React, {Component} from 'react';\n// import Select from \"../../../Controls/Select\"\nimport AutoCompleteTextBox from \"../../../Controls/AutocompleteTextBox\"\n// import Locale from \"../../../_locale\"\nimport TextUtils from \"../../../utilities\"\nimport Table from \"../../../Components/Table\"\nimport TranscripTableProps from \"../../../Configs/Constants/transcript_table.json\"\n\nfunction processSubjectFile(text){\n    let lines = text.split(\"\\n\");\n    let group = null;\n    let options = [];\n\n    for (let i = 0; i < lines.length; ++i){\n        let arr = lines[i].split(\";\");\n\n        options[i] = null\n\n        if(arr.length !== 2){\n            continue;\n        }\n        \n        if(arr[0].includes(\"Кафедра\")){\n            group = arr;\n            continue;\n        }\n\n        options[i] = {\n            \"department\" : group,\n            \"label\" : arr[0],\n            \"ru\" : arr[0],\n            \"en\" : arr[1],\n            \"value\" : i\n        }\n    }\n    return options;\n}\n\nclass TranscriptPage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            options : [], \n            selected_options : [], \n            table : {\n                columns : TranscripTableProps.columns,\n                data : [],\n                title : \"Extract from the progress record book\"\n            },\n            table_header : {\n                student : {},\n                faculty : {},\n                speciality: {},\n                form_of_training: {}\n            }\n        }\n        this.onChangeSelect = this.onChangeSelect.bind(this);\n        this.onClickOption = this.onClickOption.bind(this);\n        this.formatOptions = this.formatOptions.bind(this);\n    }\n    onChangeSelect(e){\n        \n    }\n    onClickOption(e){  \n        let selected_options = this.state.selected_options;\n        let chosen_option =  e.target.dataset[\"key\"];\n        selected_options.push(this.state.options[chosen_option]);\n\n        this.setState({selected_options}, () => {\n        });\n    }\n    \n    formatOptions(options, onClick){\n        return options.filter(a => a && !this.state.selected_options.includes(a)).map(a => {\n            return <button key={a.value} data-key={a.value} className=\"dropdown-item\" onClick={onClick}>\n                {a.label}\n            </button>\n        })\n    }\n    formatTableRows(){\n        return this.state.selected_options.filter(a => a !== null).map((a, index) => {\n            return {\n                \"id\" : index + 1,\n                \"discipline\" : a.en,\n                \"num_hours\" : \"\",\n                \"type_of_assesment\" : \"\",\n                \"turnout\" : \"\",\n                \"grade\" : \"\"\n            }\n        })\n    }\n    optionsFilterFunction(text, options){  \n        if(text.length === 0 )\n            return []   \n\n        let sorted = options.filter(a => a !== null).map(a => {\n            let sims = [0];\n            for (let i = 0; i < a.label.length - text.length; ++i){\n                let sim = TextUtils.TextUtilities.similarity(a.label.slice(i, i + text.length ), text);\n                sims.push(sim)\n            }\n            for (let i = 0; i < a.department[0].length - text.length; ++i){\n                let sim = TextUtils.TextUtilities.similarity(a.department[0].slice(i, i + text.length ), text);\n                sims.push(sim)\n            }\n            a[\"order\"] =  Math.max.apply(null, sims);\n            return a;\n        })\n        .filter(a => a.order > 0.5)\n        .sort((a, b) => b.order - a.order);\n\n        return sorted;\n    }\n    componentDidMount(){\n        fetch('/data/translations.csv')\n            .then((r) => r.text())\n            .then(text  => {\n                let options = processSubjectFile(text);\n                this.setState({options : options})\n            })  \n    }\n    render(){\n        return (\n            <div className=\"container-fluid\">            \n                <div className=\"row mt-5\" >\n                    <div className=\"col-12 my-3\">\n                        <AutoCompleteTextBox \n                        options={this.state.options}\n                        filtered_options={[]}\n                        filterFunc={this.optionsFilterFunction} \n                        formatOptions={this.formatOptions}\n                        onClickElement={this.onClickOption}\n                        className=\"col-12 col-md-5\" \n                        optionsDropdownClass=\"bg-white z-1000 col-10 border-right\"                       \n                        name=\"filter-disciplines\"\n                        />\n                    </div>\n                    <div className=\"col-12 mt-3\">\n                        <Table columns={this.state.table.columns} data={this.formatTableRows()} rows='10' title={this.state.table.title}/>\n                    </div>\n                </div>\n            </div>      \n        );\n    }\n}\nexport default TranscriptPage;  ","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport Locale from \"../../_locale/\"\n\nconst NavBar = (props) => {\n  const user_lang = localStorage.getItem(\"_locale\") || navigator.language || navigator.userLanguage || \"ru\";\n\n  let location = useLocation();\n\n  return (\n    <nav className={\"navbar navbar-dark bg-primary fixed-top \" + props.className} >\n      {props.navs.map((a) => \n        <Link key={a.link} className={\"nav-item text-white no-underline \" + (location.pathname === a.link ? \"border-bottom border-2x border-danger\": \"\")} to={a.link}>\n        {Locale[user_lang][a.caption].title}\n      </Link>\n      )}\n    </nav>\n  );\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n// import PrivateRoute from \"./Components/privateRoute\"\n\nimport SupportPage from \"./Pages/Support\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./Pages/Auth/Login\";\nimport TranscriptPage from \"./Pages/Wizards/Transcript\"\n\nimport NavBar from \"./Components/navbar\";\n\nimport PrivateNavs from \"./Configs/Routes/private\"\nimport PublicNavs from \"./Configs/Routes/public\"\n\nimport './Css/bootstrap.css';\nimport './Css/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"\">\n          {(sessionStorage.getItem('user') \n            && <NavBar navs={PrivateNavs} className=\"mb-5\" /> )\n          || <NavBar navs={PublicNavs} className=\"mb-5\" />}\n          <Route exact strict path=\"/login\" component={Login} />\n          <Route exact path=\"/\" component={Home} />\n          {/* <PrivateRoute exact strict  path=\"/\" component={Home} /> */}\n          <Route exact strict path=\"/transcript_wizard\" component={TranscriptPage} />\n          <Route exact strict path=\"/support\" component={SupportPage} />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './Css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}